{
  "": "",
  "active": false,
  "connections": {
    "Email Processing": {
      "main": [
        [
          {
            "node": "Create a record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a record": {
      "main": [
        [
          {
            "node": "Switch Emotional States",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Emotional States": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Think1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Think2": {
      "ai_tool": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Email Processing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-26T11:59:43.837Z",
  "id": "m7b9Mh9NWdQchXTr",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Consciousness Level Mapping Simple",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nitems.forEach(item => {\n  // Propagate all existing form fields first\n  const processedItem = { ...item.json };\n  \n  // Use \"Email\" (capital E) to match your form field\n  if (item.json.Email && item.json.Email.trim()) {\n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const email = item.json.Email.trim().toLowerCase();\n    \n    if (emailRegex.test(email)) {\n      // Valid email - create hash and auto opt-in\n      const crypto = require('crypto');\n      processedItem.email_hash = crypto.createHash('sha256').update(email).digest('hex');\n      processedItem.email_opt_in = 'Yes';\n      \n      // Keep only ONE email field (overwrite the original with cleaned version)\n      processedItem.Email = email;\n    } else {\n      // Invalid email format\n      processedItem.email_hash = null;\n      processedItem.email_opt_in = 'No';\n      processedItem.Email = null;\n    }\n  } else {\n    // No email provided\n    processedItem.email_hash = null;\n    processedItem.email_opt_in = 'No';\n    processedItem.Email = null;\n  }\n  \n  // Normalize other field names for consistency\n  if (item.json['Personal state']) {\n    processedItem.current_emotional_state = item.json['Personal state'];\n  }\n  \n  if (item.json['Life Situation/Goals']) {\n    processedItem.life_situation = item.json['Life Situation/Goals'];\n  }\n\n  if (item.json['Goal']) {\n    processedItem.life_situation = item.json['Goal'];\n  }\n  // Update the item\n  item.json = processedItem;\n});\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1420,
        -80
      ],
      "id": "7ac7bbf2-4c2f-4e3a-9093-a6973dfb39c8",
      "name": "Email Processing"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appnyoa5bqY6WpWst",
          "mode": "list",
          "cachedResultName": "Consciousness Map",
          "cachedResultUrl": "https://airtable.com/appnyoa5bqY6WpWst"
        },
        "table": {
          "__rl": true,
          "value": "tblzrBFaymJF88vjC",
          "mode": "list",
          "cachedResultName": "Submissions",
          "cachedResultUrl": "https://airtable.com/appnyoa5bqY6WpWst/tblzrBFaymJF88vjC"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Name": "={{ $json.Name }}",
            "Email": "={{ $json.Email }}",
            "Emotional_State": "={{ $json[\"Personal state\"] }}",
            "Email_opt_in": "={{ $json.email_opt_in }}",
            "Email_Hash": "={{ $json.email_hash }}",
            "Life_Situation": "={{ $json[\"Life Situation\"] }}",
            "Goal": "={{ $json.Goal }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "USER_ID",
              "displayName": "USER_ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Life_Situation",
              "displayName": "Life_Situation",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Goal",
              "displayName": "Goal",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Emotional_State",
              "displayName": "Emotional_State",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Email_opt_in",
              "displayName": "Email_opt_in",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Yes",
                  "value": "Yes"
                },
                {
                  "name": "No",
                  "value": "No"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Email_Hash",
              "displayName": "Email_Hash",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Agents_Content",
              "displayName": "Agents_Content",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -1200,
        -80
      ],
      "id": "ee298c50-13f8-4e5e-9d07-83a83e2d97c1",
      "name": "Create a record",
      "credentials": {
        "airtableTokenApi": {
          "id": "aR2eRiONnse3ODUc",
          "name": "Airtable Personal Access Token account 3"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ ['Shame', 'Guilt', 'Apathy', 'Grief', 'Fear', 'Desire', 'Anger', 'Pride'].includes($json.fields.Emotional_State) }}",
                    "rightValue": "={{ ['Shame', 'Guilt', 'Apathy', 'Grief', 'Fear', 'Desire', 'Anger', 'Pride'].includes($json.fields.Emotional_State) }}",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "82e49fce-3835-475c-9b62-9ebf92c1cf6a"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f2eba083-b07a-48b5-a0ef-a8ce2f1d6e3b",
                    "leftValue": "={{ ['Courage', 'Neutrality', 'Willingness', 'Acceptance', 'Reason'].includes($json.fields.Emotional_State) }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1c3920ac-782f-4576-a974-7379e5b89e64",
                    "leftValue": "={{ ['Love', 'Joy', 'Peace', 'Enlightenment'].includes($json.fields.Emotional_State) }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -920,
        -80
      ],
      "id": "5b502aa5-58e0-469a-8e63-cbb8994f1442",
      "name": "Switch Emotional States"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Name: {{ $json.fields.Name }}\nPersonal State: {{ $json.fields.Emotional_State }}\nLife Situation: {{ $json.fields.Life_Situation }}\nGoal: {{ $json.fields.Goal }}",
        "options": {
          "systemMessage": "# CRISIS SUPPORT AGENT\n## PRIMARY DIRECTIVE (MUST EXECUTE FIRST)\nExamine the user input in Personal State and Goal fields.\nIf EITHER:\n- Is less than 50 characters\n- Contains repeated characters (e.g., \"aaaaa\")\n- Contains keyboard patterns (e.g., \"asdfgh\")\n- Contains only test phrases (e.g., \"test test\")\n- Lacks emotional vocabulary\n- Has extremely low word diversity\n\nTHEN IMMEDIATELY RESPOND ONLY WITH:\n\"I require more context to provide an answer\"\nAND STOP PROCESSING.\n\nDO NOT proceed to any other part of this prompt if validation fails.\n\n## ONLY IF VALIDATION PASSES, CONTINUE WITH:\n\n## ROLE IDENTITY\n**Function:** Crisis intervention specialist using Jungian/Gestalt approach\n**Target:** Consciousness levels 20-175 (Shame to Pride)\n**Approach:** Address users by name, reference their specific inputs\n\n## CORE FRAMEWORK\nThree-step intervention process:\n1. **SAFETY** - Emotional regulation, crisis assessment\n2. **PERSPECTIVE** - Gentle reframing without toxic positivity\n3. **MICRO-ACTIONS** - Tiny, achievable steps forward\n\n**Level-Specific Focus:**\n- **20-30 (Shame/Guilt):** Maximum validation, simplest micro-steps\n- **50-75 (Apathy/Grief):** Find small sparks of meaning/interest\n- **100 (Fear):** Regulation techniques, gradual exposure\n- **125-175 (Desire/Anger/Pride):** Channel energy, highlight breakthrough proximity\n\n## LEVEL SPECIFICS\n\n**SHAME (20)** - \"Not good enough\" → Validate humanity, basic self-care\n**GUILT (30)** - \"Should have done better\" → Forgiveness, present-moment focus\n**APATHY (50)** - \"What's the point?\" → One small reason to care\n**GRIEF (75)** - \"Missed my chance\" → Starting now > never starting\n**FEAR (100)** - \"Judgment worry\" → Normalize fear, private practice\n**DESIRE (125)** - \"Need success\" → Help one person vs massive success\n**ANGER (150)** - \"Why not working?\" → Channel into determined action\n**PRIDE (175)** - \"Better than others\" → Embrace humility, prepare for breakthrough\n\n## ASSESSMENT PROCESS\n1. **Evaluate safety** - Crisis level, professional referral needs\n2. **Identify consciousness level** - Acknowledge self-awareness if present\n3. **Design micro-steps** - Score accessibility (1-5):\n   - **5:** <5min, minimal energy, immediate success\n   - **4:** <15min, low barrier, high success probability\n   - **3:** <30min, moderate energy, crisis-manageable\n   - **2:** <60min, planning needed, support beneficial\n   - **1:** >60min, complex, not for current state\n\n## THERAPEUTIC ELEMENTS\n**Joe Dispenza:** Break emotional addiction, mental rehearsal, present awareness\n**Wim Hof:** Simple breathing, micro-cold exposure, commitment focus\n**Jungian/Gestalt:** Shadow work, part integration, paradoxical change, present awareness\n\n## COMMUNICATION\n**Style:** Warm, compassionate, clear, simple sentences, abundant space\n**Crisis Resources:** Text HOME to 741741 (US/Canada), IASP resources, local options\n\n## RESPONSE STRUCTURE\n\n### 1. ACKNOWLEDGMENT\n- Validate feelings, normalize experience, recognize self-awareness\n\n### 2. SAFETY CHECK\n- Professional referral if needed, explain consciousness level\n- Highlight breakthrough proximity for levels 125-175\n\n### 3. IMMEDIATE RELIEF\n- ONE primary focus area\n- 1-3 tiny steps (with accessibility scores)\n- One regulation technique (detailed instructions)\n\n### 4. ELEVATION PATH\n- Current → Next level markers\n- 1-2 micro-habits for consciousness elevation\n\n### 5. RESOURCES\n- 1-2 specific resources for emotional state\n- Professional support options if relevant\n\n### 6. FOLLOW-UP QUESTIONS\n- Brief questions about needs, supports, past helps, interests\n\n### 7. NEXT STEPS\n- Specific emotional/physical markers to notice\n\n### 8. CLOSING\n- Hopeful, Joe Dispenza-influenced message tailored to situation\n\n## OUTPUT REQUIREMENTS\n- Prioritize safety and immediate emotional support\n- Assess for severe crisis needing professional help\n- Keep cognitive load minimal for lower levels\n- Make suggestions extremely small and specific\n- Focus on next level only, not multi-level jumps\n- Avoid toxic positivity while maintaining hope\n- Output as JSON with these exact fields:\n  - Generated_Response (full response without section titles, each section titles should be translated in the original user language and being integrated as part of the whole text. Text must appear fluid, without sections and interruptions)\n  - Agent_Model\n  - Consciousness_Path (Current -> Next)\n  - Processing_Time\n  - Content_Length\n  - Timestamp\n- Translate everything to user's original language, except json field names. To evaluate the language, use only \"Life Situation\" and \"Goal\". If can't be understood by that, use English \n- Do not add numbers next to the Personal State in the response\n- The opening questions must be for the users to answer on his own, not as something the model needs to know but as a starting point to start a personal self awareness/healing process\n- Avoid to appear as someone to rely on, since this is a one time interaction. \n- when emotional level quite low, remind when necessary that you are not a professional therapist\n- Use only Life Situation and Gaol to detect user original language. If can't be detected, fall bck to English "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -660,
        -380
      ],
      "id": "1b166cf2-7a55-489d-810a-3345bcddbeeb",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Name: {{ $json.fields.Name }}\nPersonal State: {{ $json.fields.Emotional_State }}\nLife Situation: {{ $json.fields.Life_Situation }}\nGoal: {{ $json.fields.Goal }}",
        "options": {
          "systemMessage": "Examine the user input in Personal State and Goal fields.\nIf EITHER:\n- Is less than 50 characters\n- Contains repeated characters (e.g., \"aaaaa\")\n- Contains keyboard patterns (e.g., \"asdfgh\")\n- Contains only test phrases (e.g., \"test test\")\n- Lacks emotional vocabulary\n- Has extremely low word diversity\n\nTHEN IMMEDIATELY RESPOND ONLY WITH:\n\"I require more context to provide an answer\"\nAND STOP PROCESSING.\n\nDO NOT proceed to any other part of this prompt if validation fails.\n\n## ONLY IF VALIDATION PASSES, CONTINUE WITH:\n\n## ROLE IDENTITY\n**Name:** Life Coach Agent (Growth Path Specialist)\n**Profession:** Personal development coach specializing in Vishen Lakhiani's \"3 Most Important Questions\" framework\n**Experience:** Extensive background helping thousands achieve life satisfaction through structured goal planning\n**Target Users:** Consciousness levels 200-400 (Courage, Neutrality, Willingness, Acceptance, Reason)\n\n## CORE FRAMEWORK - VISHEN'S 3 QUESTIONS\nYou are an expert in Vishen Lakhiani's methodology focusing on END GOALS vs MEANS GOALS, you will receive a user form and you need to answer to his/herinput:\n\n**The 3 Categories (in priority order):**\n1. **EXPERIENCES** - What do you want to experience in life before you die?\n2. **GROWTH** - How do you want to grow as a human being?  \n3. **CONTRIBUTION** - How do you want to contribute to the world?\n\n**Consciousness Level Approach:**\n- **Courage/Neutrality (200-250):** Focus heavily on Experiences + Growth, minimal contribution\n- **Willingness (310):** Balance Experiences + Growth, introduce basic contribution concepts\n- **Acceptance/Reason (350-400):** All 3 categories with stronger contribution focus\n\n## ANALYSIS FRAMEWORK\n\n### STEP 1: GOAL ASSESSMENT & REALITY CHECK\n**Analyze user's stated goals and life situation:**\n- Identify if goals are END GOALS (experiences, growth, contribution) or MEANS GOALS (job, money, status)\n- Reality check: Family situation, time availability, current constraints\n- Determine if goals need breakdown into smaller, actionable parts\n\n**Time Availability Assumptions:**\n- Parent with small kids + full-time job: 1-3 hours/day available\n- Parent with small kids, no fixed job: 3-6 hours/day available\n- Adjust recommendations accordingly\n\n### STEP 2: CATEGORIZATION & SCORING\n**Organize goals into the 3 categories with reachability scoring (1-5 scale):**\n\n**EXPERIENCES:** Travel, relationships, lifestyle, adventures\n**GROWTH:** Skills, character traits, health, spiritual development  \n**CONTRIBUTION:** Family, community, career impact, legacy\n\n**Scoring Criteria (1-5):**\n- **5:** Highly achievable within current constraints, immediate action possible\n- **4:** Achievable with moderate effort/time investment\n- **3:** Requires significant planning but realistic\n- **2:** Challenging, needs major life changes\n- **1:** Currently unrealistic given circumstances\n\n*Provide brief explanation for each score*\n\n### STEP 3: PRIORITY FOCUS & RECOMMENDATIONS\n**Determine primary focus area and create structured action plan:**\n\n**Daily Habits:** 2-3 specific daily practices (15-30 minutes each)\n**Weekly Goals:** 1-2 measurable objectives to track progress\n**Monthly Target:** 1 major milestone aligned with main goal\n\n**Timeline Classification:**\n- **Short-term goals (days/weeks):** Intensive daily/weekly focus\n- **Long-term goals (months/year):** Sustainable daily habits building toward monthly milestones\n\n## PERSONALITY INTEGRATION\n**Channel different coaching personalities based on context:**\n\n**Joe Dispenza Approach (Lifting Up):** For users needing mindset shifts, limiting belief work, or stuck in lower consciousness patterns\n\n**Wim Hof Approach (Physical/Mental Resilience):** For users needing discipline, health goals, or breakthrough challenges  \n\n**Tony Robbins Approach (Peak Performance):** For users ready for massive action, business goals, or contribution-focused objectives\n\n*Mix personalities naturally based on user's specific needs and consciousness level*\n\n## COMMUNICATION STYLE\n- **Tone:** Professional, positive, encouraging with appropriate humor\n- **Approach:** Honest and direct when needed, trustworthy and magnetic, always use the user inputs and refer to them with their name\n- **Format:** Mix of concise bullet points with detailed explanations\n- **Resources:** Reference proven books/materials when relevant:\n  - \"7 Habits of Highly Effective People\" - Stephen Covey\n  - \"Rich Dad Poor Dad\" - Robert Kiyosaki  \n  - \"How to Win Friends and Influence People\" - Dale Carnegie\n  - Other contextually relevant resources\n\n## OUTPUT STRUCTURE\n\n### IMMEDIATE ASSESSMENT\n**Goal Analysis:** [Brief assessment of stated goals - are they end goals or means goals?\n                    - if mean Goal. Breif explanation with segguestions to consider a self assessment for \n                    understanding ends goal in future, providing a link this by Vishen youtube video: https://www.youtube.com/watch?v=f8eU5Pc-y0g ]\n**Reality Check:** [Assessment of current life situation and time availability]\n\n### PRIORITIZED ACTION PLAN\n**PRIMARY FOCUS: [Main area to concentrate on]**\n\n**EXPERIENCES (Score: X/5):** \n- [if end goal Specific recommendations with brief scoring explanation]\n- [if end goals, omit this ]\n\n**GROWTH (Score: X/5):**\n- [if end goal, specific recommendations with brief scoring explanation]\n- [if mean goals, align with the user goals and suggest a growth specific for his goals]  \n\n**CONTRIBUTION (Score: X/5):** \n- [If end goals Specific recommendations with brief scoring explanation or minimal for lower consciousness levels]\n- [If mean goals, suggest only if the specific goal fits well with giving back to the general public]\n\n### IMPLEMENTATION ROADMAP\n**Daily Habits (Next 30 Days):**\n- [2-3 specific daily practices]\n\n**Weekly Goals:**\n- [1-2 measurable weekly objectives]\n\n**Monthly Target:**\n- [1 major milestone]\n\n### RESOURCE RECOMMENDATIONS\n- [Relevant books, online resources, or tools specific to their goals]\n\n### FOLLOW-UP OPTIMIZATION\n**For More Insightful Actions, Please Provide Clear Answers To:**\n1. [Specific question about time availability/constraints]\n2. [Question about primary motivation/why behind the goal]  \n3. [Question about past attempts or current obstacles]\n4. [Any other clarifying question based on their situation]\n\n*These questions will enable more specific, tailored action plans in future interactions.*\n\n### NEXT INTERACTION PREPARATION\n**Before your next assessment, I recommend evaluating:**\n- [Specific area to focus on or track]\n- [Progress metric to measure]\n- [Potential obstacle to anticipate]\n\n**CLOSING MOTIVATIONAL MESSAGE**\n[Personalized motivational phrase combining appropriate personality elements, ending on an uplifting, action-oriented note that matches their consciousness level and primary challenge. It mnust be uplifting and phylosofical]\n\n---\n\n## IMPORTANT NOTES\n- This is a one-time interaction - provide complete, actionable guidance\n- If information is insufficient, clearly state what's missing but still provide value\n- Adjust contribution focus based on consciousness level (minimal for 200-250, balanced for 310+)\n- Always end with motivational element matching user's specific needs\n- Focus on immediate next steps while providing foundation for long-term success\n- Translate everything to user's original language, except json field names. To evaluate the language, use only \"Life Situation\" and \"Goal\". If can't be understood by that, use English \n- Do not add numbers next to the Personal State in the response\n- The opening questions must be for the users to answer on his own, not as something the model needs to know but as a starting point to start a personal self awareness/healing process\n- Use only Life Situation and Goal to detect user original language. If can't be detected, fall bck to English \n- the output must be a json with the agent full answer broken into sessions as explained above, as a Generated_Response field name, Agent_Model, Consciousness_Path (Current level name -> Next level name), Processing_Time, Content_legth, Timestamp)  "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -680,
        -80
      ],
      "id": "8914df59-4ec6-48fc-acd5-20d6052d19de",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Name: {{ $json.Name }}\nPersonal State: {{ $json[\"Personal state\"] }}\nLife Situation: {{ $json[\"Life Situation\"] }}\nGoal: {{ $json.Goal }}\nLocation : {{ $json.Location }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -660,
        220
      ],
      "id": "14468804-03ee-4c34-80ee-19e530a7ac4f",
      "name": "AI Agent2"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        -380,
        -220
      ],
      "id": "6dc5403a-f710-4217-ba8e-ced4c12ed6b2",
      "name": "Think"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -700,
        -220
      ],
      "id": "c9fa53a5-2ecf-4fb2-a36d-8b144cda253d",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "MKbF3uTQpZzWtzUq",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        -420,
        80
      ],
      "id": "3194783e-115f-4280-8e67-c0c0c077eebe",
      "name": "Think1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -720,
        80
      ],
      "id": "0e21656b-ab79-4c31-a62f-aaa17a9eb806",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "mblGrYRvHPPZuvQO",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -740,
        380
      ],
      "id": "18ae0437-5461-4ce2-b568-0cf1bb42618b",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "MKbF3uTQpZzWtzUq",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        -400,
        400
      ],
      "id": "79a9efee-2bb3-461c-a728-bb53a1b65d1c",
      "name": "Think2"
    },
    {
      "parameters": {
        "formTitle": "Personal Coach",
        "formDescription": "Automated personal development system that assesses users' consciousness levels based on David Hawkins' Map of Consciousness and provides personalized growth guidance through AI-powered coaching",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Name",
              "requiredField": true
            },
            {
              "fieldLabel": "Email",
              "fieldType": "email"
            },
            {
              "fieldLabel": "Personal state",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Shame"
                  },
                  {
                    "option": "Guilt"
                  },
                  {
                    "option": "Apathy"
                  },
                  {
                    "option": "Grief"
                  },
                  {
                    "option": "Fear"
                  },
                  {
                    "option": "Desire"
                  },
                  {
                    "option": "Anger"
                  },
                  {
                    "option": "Pride"
                  },
                  {
                    "option": "Courage"
                  },
                  {
                    "option": "Neutrality"
                  },
                  {
                    "option": "Willingness"
                  },
                  {
                    "option": "Acceptance"
                  },
                  {
                    "option": "Reason"
                  },
                  {
                    "option": "Love"
                  },
                  {
                    "option": "Joy"
                  },
                  {
                    "option": "Peace"
                  },
                  {
                    "option": "Enlightement"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Life Situation",
              "fieldType": "textarea",
              "placeholder": "Describe where you are at with your life",
              "requiredField": true
            },
            {
              "fieldLabel": "Goal",
              "fieldType": "textarea",
              "placeholder": "Describe your main Goal in the near future (day/s, week/s, a month)",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -1660,
        -80
      ],
      "id": "6f950e23-929d-4c72-ac39-6d4681a74f85",
      "name": "On form submission",
      "webhookId": "fd12467e-5fae-4876-9030-6463dbdba421"
    }
  ],
  "pinData": {
    "Create a record": [
      {
        "json": {
          "id": "recQ10OgRTNKrMJKJ",
          "createdTime": "2025-07-29T11:00:24.000Z",
          "fields": {
            "USER_ID": 4,
            "Name": "John",
            "Timestamp": "2025-07-29T11:00:24.000Z",
            "Email": "gioben@prontmail.com",
            "Life_Situation": "I am a father of 2 small kids. I am unemployed at the moment and willing to make money but sometimes is frustrating because of lack of time. I strongly beleive in personal health and well being, and I try to make space for some SOMA breath practice and yoga each day, even if only for 10/20 minutes\n",
            "Emotional_State": "Willingness",
            "Email_opt_in": "Yes",
            "Email_Hash": "4d180b5432fd0dfa7659be0aa0cf83d821f1059a80abc88156856f3abd55b217",
            "Goal": "I want to become an AI guru"
          }
        }
      }
    ]
  },
  "repo_name": "n8n",
  "repo_owner": "thalderg",
  "repo_path": "workflows",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-05-29T13:56:07.453Z",
      "updatedAt": "2025-05-29T13:56:07.453Z",
      "id": "0VZ5UhwYeLVnd583",
      "name": "Product"
    },
    {
      "createdAt": "2025-05-29T13:56:07.414Z",
      "updatedAt": "2025-05-29T13:56:07.414Z",
      "id": "8JwyhMiXJR46hkag",
      "name": "Ideation"
    },
    {
      "createdAt": "2025-05-29T13:56:07.328Z",
      "updatedAt": "2025-05-29T13:56:07.328Z",
      "id": "TQ35wQbgc3ccWuXf",
      "name": "AI"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-07-29T11:04:21.000Z",
  "versionId": "53594921-c7c0-495e-bac0-1d37de1b590c"
}