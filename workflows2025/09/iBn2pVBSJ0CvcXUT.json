{
  "": "",
  "active": false,
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Task Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Task Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Task Manager",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        []
      ]
    },
    "Memory": {
      "ai_memory": [
        [
          {
            "node": "Task Manager",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Task Manager": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a task in Google Tasks": {
      "ai_tool": [
        [
          {
            "node": "Task Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many tasks in Google Tasks": {
      "ai_tool": [
        [
          {
            "node": "Task Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get a task in Google Tasks": {
      "ai_tool": [
        [
          {
            "node": "Task Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete a task in Google Tasks": {
      "ai_tool": [
        [
          {
            "node": "Task Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update a task in Google Tasks": {
      "ai_tool": [
        [
          {
            "node": "Task Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-26T09:59:58.882Z",
  "id": "iBn2pVBSJ0CvcXUT",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Google Task Manager",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -608,
        128
      ],
      "id": "b419f23d-018e-459c-9b6e-b5a5e02d9a82",
      "name": "Telegram Trigger",
      "webhookId": "3f0e2244-114e-4bc0-8c2c-b1c32b8b5c1b",
      "credentials": {
        "telegramApi": {
          "id": "CtMYqp19WyE0XY9E",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "ff5e1442-1f1a-412e-8b15-437d9cf3b58b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a6d6da92-8272-4f6f-97be-7b733fc5b6d2",
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -416,
        128
      ],
      "id": "3e05089f-94a8-4abe-a5ee-bded7c552d17",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "13f27e1a-8d2b-4e19-afe4-ee282c5098a7",
              "name": "=text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -176,
        32
      ],
      "id": "1689b4cf-49bb-4800-86cc-1b2e281dcee3",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -192,
        272
      ],
      "id": "502eb977-9317-4265-85df-75efa3e0abf5",
      "name": "Telegram",
      "webhookId": "c96e27f2-8288-4855-b14c-b3a39a31f3ed",
      "credentials": {
        "telegramApi": {
          "id": "CtMYqp19WyE0XY9E",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        32,
        272
      ],
      "id": "3eabfa00-909d-4c86-afed-5d99d210db48",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "fcIDL6mBCr4eAnxg",
          "name": "OpenAi voice to text"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "maxTokens": 250,
          "temperature": 0.2,
          "timeout": 45000,
          "maxRetries": 3,
          "topP": 0.9
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        240,
        416
      ],
      "id": "8202b0da-009a-4ea6-b311-7a9bdf446fa9",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "fcIDL6mBCr4eAnxg",
          "name": "OpenAi voice to text"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1072,
        176
      ],
      "id": "abad8b44-74fd-4ca6-a190-f394c873668b",
      "name": "Telegram1",
      "webhookId": "6800d677-4224-4308-965c-06cd8aacdd88",
      "credentials": {
        "telegramApi": {
          "id": "CtMYqp19WyE0XY9E",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{$('Telegram Trigger').item.json.message.chat.id}}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        384,
        416
      ],
      "id": "48d82ffb-305e-4a64-b46a-27a04db111a3",
      "name": "Memory"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=<AgentInstructions>\n    <Role>\n        <Name>Google Tasks Manager Agent</Name>\n        <Description>Execute task operations using Google Tasks tools with visual status indicators and efficient task management.</Description>\n        <currentDate>{{$now}}</currentDate>\n    </Role>\n\n    <Goal>\n        <Primary>Assist with creating, updating, and retrieving Google Tasks while maintaining organization and visual clarity through status indicators.</Primary>\n    </Goal>\n\n    <Instructions>\n        <!-- 1. General Task Creation -->\n        <Instruction>\n            When creating new tasks (e.g. \"Create a task to buy groceries due tomorrow\"):\n            • Use \"Get many tasks in Google Tasks\" or \"Get a task in Google Tasks\" to check for similar existing tasks.\n            • Add appropriate prefixes: [WEEKLY GOAL] or [MONTHLY GOAL] based on task scope.\n            • Use \"Create task on google tasks\" with title, due date, and details.\n            • For subtasks, link to parent task and specify relationship.\n            • Confirm the task was successfully created with appropriate visual indicator.\n        </Instruction>\n\n        <!-- 2. Updating Tasks -->\n<!-- 2. Updating Tasks -->\n     <!-- 2. Updating and Managing Tasks -->\n        <Instruction>\n            When updating, deleting, or managing existing tasks:\n            • STEP 1: Use \"Get Many tasks in Google Tasks\" to find and identify the specific task\n            • STEP 2: **ALWAYS CONFIRM** with the user before making any changes:\n            - For UPDATES: Show current task details and ask \"Do you want me to update [task title] with these changes: [list changes]?\"\n            - For DELETIONS: Show task details and ask \"Are you sure you want to delete the task '[task title]' due [due date]? This cannot be undone.\"\n            • STEP 3: **WAIT for user confirmation** before proceeding\n            • STEP 4: Only after receiving explicit confirmation (yes/confirm/proceed), apply the action:\n            - \"Update a task in Google Tasks\" for modifications  \n            - \"Delete a task in Google Tasks\" for removal\n            • STEP 5: Confirm completion with updated visual status\n            • **NEVER update or delete tasks without explicit user confirmation**\n        </Instruction>\n\n        <!-- 4. Visual Status Indicators -->\n        <Instruction>\n            Use visual status indicators for all task presentations:\n            • ✅ COMPLETED tasks: Show with checkmark\n              Example: \"✅ Buy groceries (completed Sept 23)\"\n            • 🔄 ONGOING tasks: Show with progress indicator  \n              Example: \"🔄 [WEEKLY GOAL] Finish project report (due Sept 28)\"\n            • 📋 REGULAR tasks: Show with clipboard\n              Example: \"📋 Call dentist (due Sept 25)\"\n            • 🎯 WEEKLY and MONTHLY GOAL tasks: Show with target\n              Example: \"🎯 [MONTHLY GOAL] Read 3 books (due Sept 30)\"\n            • 🔗 Subtasks: Show with link indicator when connected to parent\n        </Instruction>\n\n        <!-- 5. Task Types and Classification -->\n        <Instruction>\n            Task Types with Visual Indicators:\n            • 📋 Regular tasks\n            • 🎯 [WEEKLY GOAL] - due 2025-09-28\n            • 🎯 [MONTHLY GOAL] - due 2025-09-30  \n            • 🔗 Subtasks linked to parent\n            • ✅ Completed tasks\n            • 🔄 Ongoing/In-progress tasks\n        </Instruction>\n\n        <!-- 6. Tools Available -->\n        <Instruction>\n            Tools accessible to this Agent:\n            1) Get many tasks in Google Tasks\n            2) Get a task in Google Tasks  \n            3) Create a task in Google Tasks\n            4) Update a task in Google Tasks  \n            5) Delete a task in Google Task\n        </Instruction>\n\n        <!-- 7. Communication Style -->\n        <Instruction>\n            Provide brief, clear responses with visual indicators. Always confirm task details before taking action. Maintain organized presentation of tasks and clarify when necessary.\n        </Instruction>\n    </Instructions>"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        400,
        176
      ],
      "id": "9aa1572b-e3aa-417b-a444-f3e9f5a86594",
      "name": "Task Manager"
    },
    {
      "parameters": {
        "task": "MTA1NzYyNzU3MTI4NjMxMjMyMzY6MDow",
        "title": "={{ $fromAI('taskTitle','the name used for creating new tasks') }}",
        "additionalFields": {
          "dueDate": "={{ $fromAI('EndDate','the end date and time for creating events') }}",
          "parent": "={{ $fromAI('parentTask','the parent task if this is a subtask') }}",
          "status": "={{ $fromAI('status','the current state of the task') }}"
        }
      },
      "type": "n8n-nodes-base.googleTasksTool",
      "typeVersion": 1,
      "position": [
        496,
        432
      ],
      "id": "02d7e62d-84bf-4fce-b57b-d078307f1350",
      "name": "Create a task in Google Tasks",
      "credentials": {
        "googleTasksOAuth2Api": {
          "id": "TJkYzxOql76gvIwy",
          "name": "Google Tasks account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "task": "MTA1NzYyNzU3MTI4NjMxMjMyMzY6MDow",
        "limit": 100,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.googleTasksTool",
      "typeVersion": 1,
      "position": [
        624,
        432
      ],
      "id": "3c7fca94-e364-4aae-80e9-fcfe8775874f",
      "name": "Get many tasks in Google Tasks",
      "credentials": {
        "googleTasksOAuth2Api": {
          "id": "TJkYzxOql76gvIwy",
          "name": "Google Tasks account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "task": "MTA1NzYyNzU3MTI4NjMxMjMyMzY6MDow",
        "taskId": "={{ $fromAI(\"taskId\", \"Task ID from search results matching user's request\") }}"
      },
      "type": "n8n-nodes-base.googleTasksTool",
      "typeVersion": 1,
      "position": [
        1040,
        432
      ],
      "id": "295f227e-f818-4530-8d76-72a880046422",
      "name": "Get a task in Google Tasks",
      "credentials": {
        "googleTasksOAuth2Api": {
          "id": "TJkYzxOql76gvIwy",
          "name": "Google Tasks account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "task": "MTA1NzYyNzU3MTI4NjMxMjMyMzY6MDow",
        "taskId": "={{ $fromAI(\"taskId\", \"Task ID from search results matching user's request\") }}"
      },
      "type": "n8n-nodes-base.googleTasksTool",
      "typeVersion": 1,
      "position": [
        896,
        432
      ],
      "id": "db4aec6e-05e7-499c-891a-713363d0028a",
      "name": "Delete a task in Google Tasks",
      "credentials": {
        "googleTasksOAuth2Api": {
          "id": "TJkYzxOql76gvIwy",
          "name": "Google Tasks account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "task": "MTA1NzYyNzU3MTI4NjMxMjMyMzY6MDow",
        "taskId": "={{ $fromAI(\"taskId\", \"Task ID from search results matching user's request\") }}",
        "updateFields": {}
      },
      "type": "n8n-nodes-base.googleTasksTool",
      "typeVersion": 1,
      "position": [
        768,
        432
      ],
      "id": "f261e72a-a443-4624-93c8-163415d5c94d",
      "name": "Update a task in Google Tasks",
      "credentials": {
        "googleTasksOAuth2Api": {
          "id": "TJkYzxOql76gvIwy",
          "name": "Google Tasks account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "n8n",
  "repo_owner": "thalderg",
  "repo_path": "workflows",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-26T09:59:58.898Z",
      "updatedAt": "2025-09-26T09:59:58.898Z",
      "role": "workflow:owner",
      "workflowId": "iBn2pVBSJ0CvcXUT",
      "projectId": "rwZmgF8pMPgWdXwq"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-09-26T14:11:58.000Z",
  "versionId": "f214c4df-4e49-41ea-8928-1e5876c87a91"
}